// Insert SD node with desired parameter into target parts if and after Sigma Dimensions
@PART[ds??_*]:HAS[@MODULE[ModuleEnginesFX]]:AFTER[SigDim2]
{
	#@SigmaDimensions {}
	@SigmaDimensions
	{
		!Resize = del
		!Atmosphere = del
		!dayLengthMultiplier = del
		!landscape = del
		!groundTiling = del
		!atmoASL = del
		!tempASL = del
		!atmoTopLayer = del
		!atmoVisualEffect = del
		!lightRange = del
		!scanAltitude = del
		!geeASLmultiplier = del
		!resizeScatter = del
		!CustomSoISize = del
		!CustomRingSize = del
		!reEntryHeat = del
		!resizeBuildings = del
	}
}

// Modify part(s) once they have this node and if the node has matching value
// This pass seems to not like targeting non-integer values

// Will respond to 2.5x and 3.2x scale
@PART[ds??_*]:HAS[@SigmaDimensions:HAS[#Rescale[>2],#Rescale[<6]]]:AFTER[SigDim2]
{
	@MODULE[ModuleEnginesFX]:HAS[#engineID[WarpJet]]
	{
		@PROPELLANT[ElectricCharge]
		{
			@ratio *= 3
		}
		
		!atmosphereCurve {}
		atmosphereCurve
		{
			// Isp
			key = 0 24
			key = 0.1 13.5 -13.56545 -2.042391
			key = 1 12 -0.04704589 0.05954327
			key = 2 9 -0.1666667 -0.6587064
		}
	}
}

// Will respond to 6.4x and higher
@PART[X,Y,Z]:HAS[@SigmaDimensions:HAS[#Rescale[>6]]]:AFTER[SigDim2]
{
	@MODULE[ModuleEnginesFX]:HAS[#engineID[WarpJet]]
	{
		@PROPELLANT[ElectricCharge]
		{
			@ratio *= 5
		}
		
		!atmosphereCurve {}
		atmosphereCurve
		{
			// Isp
			key = 0 40
			key = 0.1 22.5 -13.56545 -2.042391
			key = 1 20 -0.04704589 0.05954327
			key = 2 15 -0.1666667 -0.6587064
		}
	}
}